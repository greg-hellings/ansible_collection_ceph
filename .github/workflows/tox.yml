name: Test with Ansible

"on":
  push:
    paths-ignore:
      - README.md
      - LICENSE
  pull_request:
  schedule:
    - cron: "12 0 * * *"

env:
  TOX_ANSIBLE_DRIVER: podman
  ANSIBLE_COLLECTIONS_PATHS: ~/.ansible/:~/work/
  checkout_path: ansible_collections/oasis_roles/ceph

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      scenarios: "${{ steps.collection.outputs.tox-envs }}"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade tox
      - uses: greg-hellings/tox-list@v1
        id: collection

  build:
    needs: collect
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario: "${{ fromJson(needs.collect.outputs.scenarios) }}"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: "${{ env.checkout_path }}"
      - name: update submodules
        run: |
          cd "${{ env.checkout_path }}"
          git submodule update --remote --recursive
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade tox
      - name: Run tox against "${{ matrix.scenario }}"
        run: |
          set -ex
          # There is some magic in the "mv" command that makes ansible-galaxy work
          # I haven't found any logic for it, but if you don't do this mv, then
          # the dependency step in molecule when run from tox will fail
          mv ansible_collections ~/work/
          cd ~/work/"${{ env.checkout_path }}"
          tox -e "${{ matrix.scenario }}"

  release:
    needs: build  # Only release if the build is good
    if: startsWith(github.ref, 'refs/tags/')  # Only release if there is a tag that's been pushed to the repo
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: artis3n/ansible_galaxy_collection@v2.2.1
        with:
          api_key: "${{ secrets.GALAXY_API_KEY }}"
      - name: Release artifacts to Git Hub
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./oasis_roles-ceph*.tar.gz
          allowUpdates: true
          name: "Release ${{ github.ref }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
